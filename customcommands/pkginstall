#!/usr/bin/env bash

# Shebang only accept one argument.
#    #!/usr/bin/env bash -e
# wouldn't worked
set -e 

PKG_DIR="$HOME/.pkgs"

mkdir -p "$PKG_DIR"

case $1 in
    rust|cargo)
        DEST="$PKG_DIR/rust/"
        export RUSTUP_HOME="$DEST/rustup"
        export RUSTUP_PREFIX="$DEST"
        export CARGO_HOME="$DEST/cargo"
        mkdir -p "$DEST"
        curl https://static.rust-lang.org/rustup.sh | bash -s -- --disable-sudo --disable-ldconfig
        ;;
    ocaml|opam)
        DEST="$PKG_DIR/ocaml/"
        mkdir -p "$DEST"
        curl https://raw.githubusercontent.com/hcarty/ocamlbrew/master/ocamlbrew-install | env OCAMLBREW_FLAGS="-r -b $DEST" bash
        ;;
    ruby|rails|rvm)
        DEST="$PKG_DIR/rvm"
        curl -sSL https://get.rvm.io | bash -s -- --ignore-dotfiles --path "$DEST" --user-install stable
        ;;
    otp|erlang|rebar)
        DEST="$PKG_DIR/erlang/"
        mkdir "$DEST"
        # Install erlang itself
        (
            set -e
            cd $(mktemp -d)
            MD5="19dfbc2042e6dd40bf281e7ca2d49d43"
            CACHE="/tmp/${MD5}.tar.gz"
            test -f "$CACHE" || curl -L "http://www.erlang.org/download/otp_src_19.1.tar.gz" -o "$CACHE"
            echo "${MD5}  $CACHE" | md5sum -c
            tar -x --strip-components=1 -f "$CACHE"
            ./configure --prefix="$DEST"
            make -j4 all install
        )
        # Install rebar
        (
            set -e
            export PATH="$DEST/bin/:$PATH"
            cd $(mktemp -d)
            SHA256="ccbc27355727090b1fdde7497ab2485c3509e2fd14b48a93276b285b5760d092"
            CACHE="/tmp/${SHA256}.tar.gz"
            test -f "$CACHE" || curl -L "https://github.com/erlang/rebar3/archive/3.3.2.tar.gz" -o "$CACHE"
            echo "${SHA256} $CACHE" | sha256sum -c
            tar -x --strip-components=1 -f "$CACHE"
            ./bootstrap
            mv "./_build/default/bin/rebar3" "$DEST/bin/"
        )
        ;;
    npm|node)
        DEST="$PKG_DIR/node"
        mkdir "$DEST"
        (
            set -e
            cd $(mktemp -d)
            SHA256="f65d5d4b7253ee29f3ba4edabd3473845075e43569bceea4267e7bf3e00ebb96"
            CACHE="/tmp/${SHA256}.tar.xz"
            test -f "$CACHE" || curl "https://nodejs.org/dist/v6.10.0/node-v6.10.0.tar.xz" -o "$CACHE"
            echo "${SHA256}  $CACHE" | sha256sum -c
            tar -x --strip-components=1 -f "$CACHE"
            ./configure --prefix="$DEST"
            make -j4 all install
        )
        ;;
    cabal|haskell)
        DEST="$PKG_DIR/haskell"
        mkdir "$DEST"
        # Install ghc
        (
            set -e
            cd $(mktemp -d)
            SHA256="b1c06af49b29521d5b122ef3311f5843e342db8b1769ea7c602cc16d66098ced"
            CACHE="/tmp/${SHA256}.tar.xz"
            test -f "$CACHE" || curl "http://downloads.haskell.org/~ghc/8.0.1/ghc-8.0.1-x86_64-deb8-linux.tar.xz" -o "$CACHE"
            echo "${SHA256}  $CACHE" | sha256sum -c
            tar -x --strip-components=1 -f "$CACHE"
            ./configure --prefix="$DEST"
            make -j4 install
        )
        export PATH="$DEST/bin/:$PATH"
        # Install cabal
        (
            set -e
            cd $(mktemp -d)
            SHA256="d840ecfd0a95a96e956b57fb2f3e9c81d9fc160e1fd0ea350b0d37d169d9e87e"
            CACHE="/tmp/${SHA256}.tar.gz"
            test -f "$CACHE" || curl "https://www.haskell.org/cabal/release/cabal-install-1.24.0.0/cabal-install-1.24.0.0.tar.gz" -o "$CACHE"
            echo "${SHA256} $CACHE" | sha256sum -c
            tar -x --strip-components=1 -f "$CACHE"
            ./bootstrap.sh --no-doc
        )
        ;;
    *)
        echo "Pkgs unknown"
        exit 127
esac
